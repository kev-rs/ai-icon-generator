import { v2 as cloudinary } from 'cloudinary'
import type { NextApiRequest, NextApiResponse } from 'next';
import { asset } from '@assets';

type Res = {
  url: string
} | {
  error: string
} | string;

export const config = {
    api: {
        bodyParser: false,
    }
}

export default function handler(req: NextApiRequest, res: NextApiResponse<Res>) {
  const { file } = req.body as { file: string };

  // if (!file) return res.status(404).json({ error: 'No file provided' })
  
  cloudinary.uploader.upload(file, { tags: 'basic_sample' })
    .then(function (image) {
      console.log();
      console.log("** File Upload (Promise)");
      console.log("* public_id for the uploaded image is generated by Cloudinary's service.");
      console.log("* " + image.public_id);
      console.log("* " + image.url);
      res.status(200).send('ok - upload');
    })
    .catch(function (err) {
      console.log();
      console.log("** File Upload (Promise)");
      if (err) { console.warn(err); }
      res.status(200).send(`${err as string}`);
    });

    res.status(200).send('ok');

// try {
//   const { data, ...rest } = await cloudinary.uploader.upload(file);
//     /* eslint-disable */
//   const url: string = data.url;
//   /* eslint-enable */

//   console.log(data, rest);

//   res.status(200).json({ url })
  
// } catch (err) {
//   console.log(err)
//   res.status(400).json({error: `${err as string}`})
// }


}