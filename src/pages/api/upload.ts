import { v2 as cloudinary } from 'cloudinary'
import type { NextApiRequest, NextApiResponse } from 'next';

type Res = {
  url: string;
} | 
{
  error: string;
} |
{
  message: string;
} | string;

export default async function handler(req: NextApiRequest, res: NextApiResponse<Res>) {
  const file = req.body as { url: string };
  console.log(file);

  if (!file) return res.status(404).json({ error: 'No file provided' })
  
  const img = await cloudinary.uploader.upload(file.url, { tags: 'basic_sample' })
    // .then(function (image) {
    //   console.log();
    //   console.log("** File Upload (Promise)");
    //   console.log("* public_id for the uploaded image is generated by Cloudinary's service.");
    //   console.log("* " + image.public_id);
    //   console.log("* " + image.url);
    //   res.status(200).json({ message: 'ok - upload' });
    // })
    // .catch(function (err) {
    //   console.log();
    //   console.log("** File Upload (Promise)");
    //   if (err) { console.warn(err); }
    //   res.status(400).json({error: `${err as string}`});
    // });

  res.status(200).json({ url: img.url });
}